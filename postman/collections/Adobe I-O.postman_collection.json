{
	"info": {
		"_postman_id": "ee19f8f9-df01-4aeb-9551-42fd2c432bc3",
		"name": "Adobe I/O",
		"description": "Example calls to use JWT integration and authentication in Adobe I/O\n\nThis is part of the corresponding article written for the Adobe I/O blog.\n\nContact: ktukker@adobe.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "INIT: Load Crypto Library for RS256",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "824e628b-b420-417b-894b-417ab6412896",
						"type": "text/javascript",
						"exec": [
							"postman.setGlobalVariable(\"jsrsasign-js\", responseBody);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js",
					"protocol": "http",
					"host": [
						"kjur",
						"github",
						"io"
					],
					"path": [
						"jsrsasign",
						"jsrsasign-latest-all-min.js"
					]
				},
				"description": "Load the RSA-Sign Crypto LIbrary in a global environment variable\n\nSource: http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js\n\nGithub: https://github.com/kjur/jsrsasign"
			},
			"response": []
		},
		{
			"name": "IMS: JWT Generate + Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1759a9d4-ac9a-4eb2-b5d1-a608a43a2cad",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"access_token\", data.access_token);"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "a0f769fa-cd8b-4adc-809c-a5eb2a2fd4ee",
						"type": "text/javascript",
						"exec": [
							"// Tips from: https://github.com/kjur/jsrsasign/issues/199",
							"// https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWT-generation",
							"",
							"var navigator = {}; //fake a navigator object for the lib",
							"var window = {}; //fake a window object for the lib",
							"eval(postman.getGlobalVariable(\"jsrsasign-js\")); //import javascript jsrsasign",
							"",
							"",
							"var header = {",
							"\t\"alg\": \"RS256\"",
							"};",
							"",
							"var data = {",
							"\t\"exp\": Math.round(87000 + Date.now()/1000),",
							"\t\"iss\": postman.getEnvironmentVariable(\"IMSOrg\"),",
							"\t\"sub\": postman.getEnvironmentVariable(\"techacct\"),",
							"\t\"aud\": \"https://ims-na1.adobelogin.com/c/\"+postman.getEnvironmentVariable(\"clientID\")",
							"};",
							"",
							"meta_scopes = postman.getEnvironmentVariable(\"meta_scope\").split(',');",
							"meta_scopes.forEach(function(scope){",
							"    var meta_scope = postman.getEnvironmentVariable(\"IMS\")+\"/s/\"+",
							"                     scope;",
							"    data[meta_scope] = true;",
							"});",
							"",
							"",
							"",
							"",
							"var secret = postman.getEnvironmentVariable(\"secret\");",
							"",
							"var sHeader = JSON.stringify(header);",
							"var sPayload = JSON.stringify(data);",
							"var sJWT = KJUR.jws.JWS.sign(\"RS256\", sHeader, sPayload, secret);",
							"",
							"postman.setEnvironmentVariable(\"jwt_token\", sJWT);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "client_id",
							"value": "{{clientID}}",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{clientSecret}}",
							"type": "text"
						},
						{
							"key": "jwt_token",
							"value": "{{jwt_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{IMS}}/ims/exchange/jwt/",
					"host": [
						"{{IMS}}"
					],
					"path": [
						"ims",
						"exchange",
						"jwt",
						""
					]
				},
				"description": "Generate a JWT token using the Crypto RS256\nSend to IMS for access_token"
			},
			"response": []
		},
		{
			"name": "IMS: Get Profile",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{IMS}}/ims/profile/v1",
					"host": [
						"{{IMS}}"
					],
					"path": [
						"ims",
						"profile",
						"v1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Catalog: Get Datasets",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "x-api-key",
						"value": "{{clientID}}"
					},
					{
						"key": "x-gw-ims-org-id",
						"value": "{{IMSOrg}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{PLATFORM_GATEWAY}}/data/foundation/catalog/dataSets/",
					"host": [
						"{{PLATFORM_GATEWAY}}"
					],
					"path": [
						"data",
						"foundation",
						"catalog",
						"dataSets",
						""
					]
				},
				"description": "  "
			},
			"response": []
		}
	]
}